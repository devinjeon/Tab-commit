# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TabCommitGpt < Formula
  desc "tab-commit-gpt is a simplest way to generate commit messages â€” just press `<Tab>` after `git commit -m`."
  homepage "https://github.com/devinjeon/tab-commit-gpt"
  version "0.1.2"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.2/tab-commit-gpt_v0.1.2_darwin_x86_64.tar.gz"
      sha256 "7b9866884164fc9bb0ea5afe1361488b441679a3c015830c5acb8cbc241fb204"

      def install
        bin.install "tab-commit-gpt"
        etc.install "scripts/tab-commit-gpt.zsh"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.2/tab-commit-gpt_v0.1.2_darwin_arm64.tar.gz"
      sha256 "4a5ccfce858a68b44a93964512c3a21e1380812e63acf81b3b725b7e83ae38a3"

      def install
        bin.install "tab-commit-gpt"
        etc.install "scripts/tab-commit-gpt.zsh"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.2/tab-commit-gpt_v0.1.2_linux_x86_64.tar.gz"
        sha256 "54ffc5104d7115ac92f73d92ea699804caf10025f13bbd5e56cbf89813b9c914"

        def install
          bin.install "tab-commit-gpt"
          etc.install "scripts/tab-commit-gpt.zsh"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.2/tab-commit-gpt_v0.1.2_linux_arm64.tar.gz"
        sha256 "e392e4ac03f11775d7be0738faa2def7d557ae57c1bcd7566507e5d67892a86a"

        def install
          bin.install "tab-commit-gpt"
          etc.install "scripts/tab-commit-gpt.zsh"
        end
      end
    end
  end

  def post_install
    zshrc = File.expand_path("~/.zshrc")
    script_line = "source \"#{HOMEBREW_PREFIX}/etc/tab-commit-gpt.zsh\""
    if File.writable?(zshrc)
      content = File.read(zshrc) rescue ""
      unless content.include?(script_line)
        File.open(zshrc, "a") do |f|
          f.puts "\n# Added by tab-commit-gpt"
          f.puts script_line
        end
        ohai "Added tab-commit-gpt to ~/.zshrc"
      end
    else
      opoo "~/.zshrc is not writable. Please run the following command to add tab-commit-gpt to your .zshrc:"
      puts
      puts "  echo '#{script_line}' >> ~/.zshrc"
    end
  end
end
