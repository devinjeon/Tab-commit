# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TabCommitGpt < Formula
  desc "tab-commit-gpt is a simplest way to generate commit messages â€” just press `<Tab>` after `git commit -m`."
  homepage "https://github.com/devinjeon/tab-commit-gpt"
  version "0.1.1"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.1/tab-commit-gpt_v0.1.1_darwin_x86_64.tar.gz"
      sha256 "2f11e86da285b83f74f5167518c8b56a720b3c37fe6e1075ea610103d762ef80"

      def install
        bin.install "tab-commit-gpt"
        bin.install "scripts/tab-commit-gpt.sh"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.1/tab-commit-gpt_v0.1.1_darwin_arm64.tar.gz"
      sha256 "d6861c897c7adbe6e218b815a204f11f9c5ecfa74923192eae2582fe0d4d6d11"

      def install
        bin.install "tab-commit-gpt"
        bin.install "scripts/tab-commit-gpt.sh"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.1/tab-commit-gpt_v0.1.1_linux_x86_64.tar.gz"
        sha256 "5cd870328d04e054ead4f2ecf1cb725c9a1868640e7468282d175161c9f8eeb9"

        def install
          bin.install "tab-commit-gpt"
          bin.install "scripts/tab-commit-gpt.sh"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/devinjeon/tab-commit-gpt/releases/download/v0.1.1/tab-commit-gpt_v0.1.1_linux_arm64.tar.gz"
        sha256 "656022eefd92ce056a4feca1aebe859b6877d397289075e22d4dac43241e0767"

        def install
          bin.install "tab-commit-gpt"
          bin.install "scripts/tab-commit-gpt.sh"
        end
      end
    end
  end

  def post_install
    zshrc = File.expand_path("~/.zshrc")
    script_line = "source \"#{HOMEBREW_PREFIX}/opt/tab-commit-gpt/scripts/tab-commit-gpt.sh\""
    if File.writable?(zshrc)
      content = File.read(zshrc) rescue ""
      unless content.include?(script_line)
        File.open(zshrc, "a") do |f|
          f.puts "\n# Added by tab-commit-gpt"
          f.puts script_line
        end
        ohai "Added tab-commit-gpt to ~/.zshrc"
      end
    else
      opoo "~/.zshrc is not writable. Please run the following command to add tab-commit-gpt to your .zshrc:"
      puts
      puts "  echo '#{script_line}' >> ~/.zshrc"
    end
  end

  def caveats
    <<~EOS
      To use tab-commit-gpt, add the following line to your .zshrc:

      $ echo "source \"$(brew --prefix tab-commit-gpt)/scripts/tab-commit-gpt.sh\"" >> ~/.zshrc
    EOS
  end
end
